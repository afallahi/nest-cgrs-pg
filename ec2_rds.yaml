AWSTemplateFormatVersion: '2010-09-09'

Description: EC2 with RDS (PostgreSQL)

Parameters:
  AvailabilityZone:
    Type: AWS::EC2::AvailabilityZone::Name
  AmiID:
    Type: String
    Description: "AMI ID"
    Default: ami-0d5eff06f840b45e9 # ami-051f7e7f6c2f40dc1 #Free tier eligible in us-east-1
  EnvironmentType:
    Description: "Environment Type"
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - test
      - prod
  KeyPairName:
    Type: String
    Description: Key Pair Name

  DBInstanceIdentifier:
    Type: String
    Default: "users-database"
  DBUsername:
    NoEcho: "true"
    Description: PostgreSQL username
    Type: String
    MinLength: "3"
    MaxLength: "20"
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*"
    ConstraintDescription: Must begin with a letter and contain only alphanumeric characters
    Default: postgres
  DBPassword:
    NoEcho: "true"
    Description: PostgreSQL password
    Type: String
    MinLength: "8"
    MaxLength: "20"
    AllowedPattern: "[a-zA-Z0-9]*"
    ConstraintDescription: Must contain only alphanumeric characters

Mappings:
  InstanceTypeForEnvironment:
    dev:
      InstanceType: t2.micro
    test:
      InstanceType: t2.micro
    prod:
      InstanceType: t2.small

Resources:
  MyEC2Instance:  #EC2
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone: !Ref AvailabilityZone
      ImageId: !Ref AmiID
      InstanceType: !FindInMap [ InstanceTypeForEnvironment, !Ref EnvironmentType, InstanceType]
      KeyName: !Ref KeyPairName
      SecurityGroupIds:
        - !Ref MyEC2SecurityGroup
  
  MyEC2SecurityGroup: #Security Group for EC2
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: SecGroup
      GroupDescription: "Allows HTTP/HTTPS and SSH inbound"
      SecurityGroupIngress:
        - IpProtocol: tcp # http
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0 #Allow All IPs
        - IpProtocol: tcp #https
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp #ssh
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

  MyEC2EIP: # Elastic IP for EC2          
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      InstanceId: !Ref MyEC2Instance

  MyEC2Database:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier: !Ref DBInstanceIdentifier
      VPCSecurityGroups:
      - !GetAtt MyEC2DBSecurityGroup.GroupId
      DBInstanceClass: db.t3.micro
      MasterUsername: !Ref DBUsername
      MasterUserPassword: !Ref DBPassword
      Engine: postgres
      AllocatedStorage: 5
      StorageType: gp2
      EngineVersion: 14

  MyEC2DBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: db-sec-group
      GroupDescription: Allows postgres inbound traffic
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          SourceSecurityGroupName: 
            Ref: MyEC2SecurityGroup


Outputs:
  WebsiteURL:
    Value: !Sub http://${MyEC2EIP}
    Description: My EC2 URL

  WebServerPublicDNS:
    Value: !GetAtt MyEC2Instance.PublicDnsName
    Description: EC2 instance public dns

  DatabaseEndpoint:
    Value: !GetAtt MyEC2Database.Endpoint.Address
    Description: Database endpoint

